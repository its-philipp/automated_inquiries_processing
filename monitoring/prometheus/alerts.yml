groups:
  - name: inquiry_pipeline_alerts
    interval: 30s
    rules:
      # High error rate alert
      - alert: HighErrorRate
        expr: rate(pipeline_errors_total[5m]) > 0.05
        for: 5m
        labels:
          severity: warning
          component: pipeline
        annotations:
          summary: "High error rate detected in inquiry pipeline"
          description: "Error rate is {{ $value | humanizePercentage }} over the last 5 minutes"

      # High inference latency alert
      - alert: HighInferenceLatency
        expr: histogram_quantile(0.95, rate(model_inference_duration_seconds_bucket[5m])) > 2
        for: 5m
        labels:
          severity: warning
          component: model
        annotations:
          summary: "High model inference latency detected"
          description: "95th percentile latency is {{ $value }}s"

      # Low model confidence alert
      - alert: LowModelConfidence
        expr: avg(model_prediction_confidence) < 0.6
        for: 10m
        labels:
          severity: warning
          component: model
        annotations:
          summary: "Model confidence has dropped"
          description: "Average confidence is {{ $value | humanizePercentage }}"

      # High request latency alert
      - alert: HighRequestLatency
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 5
        for: 5m
        labels:
          severity: warning
          component: api
        annotations:
          summary: "High API request latency detected"
          description: "95th percentile latency is {{ $value }}s"

      # High escalation rate alert
      - alert: HighEscalationRate
        expr: rate(routing_decisions_total{escalated="True"}[1h]) / rate(routing_decisions_total[1h]) > 0.2
        for: 30m
        labels:
          severity: info
          component: routing
        annotations:
          summary: "Escalation rate is unusually high"
          description: "{{ $value | humanizePercentage }} of inquiries are being escalated"

      # Database connection issues
      - alert: DatabaseConnectionIssues
        expr: db_connections_active == 0
        for: 1m
        labels:
          severity: critical
          component: database
        annotations:
          summary: "No active database connections"
          description: "The application has no active database connections"

      # Service down alert
      - alert: ServiceDown
        expr: up == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 2 minutes"

  - name: inquiry_business_metrics
    interval: 60s
    rules:
      # Track inquiry processing rate
      - record: inquiry:processing_rate:1h
        expr: rate(inquiries_processed_total{status="success"}[1h])

      # Track average priority score by department
      - record: routing:avg_priority_score:by_department
        expr: avg(routing_priority_score) by (department)

      # Track model prediction distribution
      - record: model:prediction_distribution:5m
        expr: sum(rate(model_predictions_total[5m])) by (model_name, predicted_class)

